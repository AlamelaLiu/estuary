Deploy Estuary into D01 board

Table of Contents:
Introduction
Preparation
    Prerequisite
    Check the hardware board
    Upgrade UEFI and trust firmware
Bring up System
    Boot via NORFLASH
    Boot via PXE
    Boot via SATA
        Preprocess when the disk can’t be identified
    Boot via ACPI
    Boot via NFS


### Introduction ###

This documentation describes how to get, build, deploy and bring up target system based Estuary Project, it will help you to make your Estuary Environment setup from ZERO.

All following sections will take the D01 board as example, other boards have the similar steps to do, for more detail difference between them, please refer to Hardware Boards sections in http://open-estuary.com/hardware-boards/.
 
### Preparation ###

# Prerequisite

    Local network: To connect hardware boards and host machine, so that they can communicate each other.
    
    Serial cable: To connect hardware board’s serial port to host machine, so that you can access the target board’s UART in host machine.

# Check the hardware board

    Hardware board should be ready and checked carefully to make sure it is available, more detail information about different hardware board, please refer to http://open-estuary.com/d01-2/.

# Upgrade UEFI and trust firmware

    You can upgrade UEFI and trust firmare yourself based on FTP service, but this is not necessary. If you really want to do it, please refer to UEFI_Manual.txt.

### Bring up System ###

There are several methods to bring up system, you can select following anyone fitting you to boot up.

# Boot via NORFLASH
    
    Boot D01 to UEFI SHELL, and type the follow commands in EBL:
    1. IP address config
    
    # Config board's IP address
    ifconfig -s eth0 <IP address> <mask> <gateway>
    e.g.: ifconfig -s eth0 192.168.1.4 255.255.255.0 192.168.1.1
    
    2. Download .kernel binary file from FTP
    
    # Download fiel from FTP server to target board's Flash
    provision <server IP> -u <ftp user name> -p <ftp password> -f <.kernel image file>
    # Write data into NORFLASH
    norwfmem <source address> <target address> <data length>
    e.g.: provision 192.168.1.107 -u sch -p aaa -f .kernel 
    
    3. Download rootfs file from FTP
    
    # Download fiel from FTP server to target board's Flash
    provision <server IP> -u <ftp user name> -p <ftp password> -f <rootfs image>
    e.g.: provision 192.168.1.107 -u sch -p aaa -f mini-rootfs.cpio.gz
    
    4. Reboot the board.
    
    To get all binaries mentioned above, please refer to Readme.txt.

# Show & change kernel command line in UEFI

    1. Boot D01 and enter EBL (UEFI shell).

    2. Use getlinuxatag to see current kernel parameter
        > getlinuxatag

    3. Use changelinuxatag to change kernel cmdline to this
        >  changelinuxatag
           ...
           console=ttyS0,115200 initrd=0x10d00000,0x1800000 rdinit=/linuxrc earlyprintk
           ...
    4. Use setlinuxatag to save comandline to FLASH
        > setlinuxatag

    5. Reboot the board.

# Boot via PXE
    
    1. Setup PXE environment on host

    Enable both DHCP and TFTP services on one of your host machines according to Setup_PXE_Env_on_Host.txt.

    2. Reboot and press anykey to enter UEFI Boot Menu
    
    3. Select boot option "PXE on MAC Address: " with your board's MAC address as the end.
    
    4. After several seconds, D01 will boot by PXE automatically.
    
    To config the grub.cfg to support PXE boot, please refer to Grub_Manual.txt.

# Boot via SATA
    
    This part will tell you how to boot D01 via SATA disk with kernel image, dtb file, grub in it.
    In my case, my SATA disk will be partitioned into 3 parts: sda1(EFI part),sda2(Ubuntu rootfs),sda3(Fedora release).
    
    1. Boot by NORFLASH or PXE as description above.

    2. Part and format SATA disk

    Format SATA disk: mkfs -t ext4 /dev/sda1
    Partition SATA disk as follow:
    
    +---------+-----------+--------------+------------------+
    | Name    |   Size    |    Type      |   Tag            |
    +---------+-----------+--------------+------------------+
    | sda1    |   20G     |    ext4      | linux filesystem |
    +---------+-----------+--------------+------------------+
    
    3. Download rootfs and uncompress it into SATA disk /dev/sda1.

    How to get different distributions, please refer to Distributions_Guider.txt.
    
    4. Reboot and enter UEFI EBL Shell.

    5. Change kernel cmdline as follow according to "Show & change kernel command line in UEFI"
    
        console=ttyS0,115200 root=/dev/sda1 rootfstype=ext4 rw earlyprintk ip=192.168.1.150:192.168.1.107:192.168.1.1:255.255.255.0::eth0:on:192.168.1.1:8.8.8.8

    6. Reboot the board.
    
# Boot via NFS
    
    D01 supports booting via NFS, you can try it as following steps:

    1. Enable DHCP, TFTP and NFS service according to Setup_PXE_Env_on_Host.txt.

    2. Change command line as follow according in "Show & change kernel command line in UEFI"

    Change kernel cmdline to:

        console=ttyS0,115200 earlyprintk rootfstype=nfsroot root=/dev/nfs rw nfsroot=<NFS-server-ip>:<path-to-exported-NFS-files> ip=<client-ip>:<NFS-server-ip>:<gw-ip>:<netmask>::eth0:on:<dns0-ip>:<dns1-ip> user_debug=31 nfsrootdebug

    Here is an example:

        console=ttyS0,115200 earlyprintk rootfstype=nfsroot root=/dev/nfs rw nfsroot=192.168.1.107:/Users/docularxu/Downloads/mnt ip=192.168.1.150:192.168.1.107:192.168.1.1:255.255.255.0::eth0:on:192.168.1.1:8.8.8.8 user_debug=31 nfsrootdebug

    Note, this is an example. Please change the values according to your local environment. Explanation of each parameter can be found in kernel source Documentations. Like:

        ip=<client-ip>:<server-ip>:<gw-ip>:<netmask>:<hostname>:<device>:<autoconf>:<dns0-ip>:<dns1-ip>

    3. Reboot the board. 
