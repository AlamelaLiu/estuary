Deploy Estuary into D02 board

Table of Contents:
Introduction
Preparation
    Prerequisite
    Check the hardware board
    Upgrade UEFI and trust firmware
Bring up System
    Boot via NORFLASH
    Boot via PXE
    Boot via NFS
    Boot via SATA
        Preprocess when the disk can’t be identified
    boot via USB
    boot via SAS
    Boot via ACPI

### Introduction ###

This documentation describes how to get, build, deploy and bring up target system based Estuary Project, it will help you to make your Estuary Environment setup from ZERO.

All following sections will take the D02 board as example, other boards have the similar steps to do, for more detail difference between them, please refer to Hardware Boards sections in http://open-estuary.com/hardware-boards/.
 
### Preparation ###

# Prerequisite

    Local network: To connect hardware boards and host machine, so that they can communicate each other.
    
    Serial cable: To connect hardware board’s serial port to host machine, so that you can access the target board’s UART in host machine.

# Check the hardware board

    Hardware board should be ready and checked carefully to make sure it is available, more detail information about different hardware board, please refer to http://open-estuary.com/d02-2/.

# Upgrade UEFI and trust firmware

    You can upgrade UEFI and trust firmare yourself based on FTP service, but this is not necessary. If you really want to do it, please refer to UEFI_Manual.txt.


### Bring up System ###

There are several methods to bring up system, you can select following anyone fitting you to boot up.

# Boot via NORFLASH
    
    Boot D02 to UEFI SHELL, and type the follow commands in EBL:
    We will often do some commands in UEFI EBL shell for these methods, about how to enter it, please refer to UEFI_Manual.txt.

    1. IP address config
    
    # Config board's IP address
    ifconfig -s eth0 <IP address> <mask> <gateway>
    e.g.: ifconfig -s eth0 192.168.1.4 255.255.255.0 192.168.1.1
    
    2. Download Image binary file from FTP
    
    # Download fiel from FTP server to target board's RAM
    provision <server IP> -u <ftp user name> -p <ftp password> -f <kernel image file> -a <download target address>
    # Write data into NORFLASH
    norwfmem <source address> <target address> <data length>
    e.g.: provision 192.168.1.107 -u sch -p aaa -f Image_D02 -a 100000
          norwfmem 100000 100000 1f00000
    
    3. Download dtb file from FTP
    
    # Download fiel from FTP server to target board's RAM
    provision <server IP> -u <ftp user name> -p <ftp password> -f <dtb file> -a <download target address>
    # Write data into FLASH
    spiwfmem <source address> <target address> <data length>
    e.g.: provision 192.168.1.107 -u sch -p aaa -f hip05-d02.dtb -a 100000
          spiwfmem 100000 300000 100000
    
    4. Download rootfs file from FTP
    
    # Download fiel from FTP server to target board's RAM
    provision <server IP> -u <ftp user name> -p <ftp password> -f <rootfs image> -a <download target address>
    # Write data into NORFLASH
    norwfmem <source address> <target address> <data length>
    e.g.: provision 192.168.1.107 -u sch -p aaa -f mini-rootfs.cpio.gz -a 100000
          norwfmem 100000 2000000 4000000
    
    5. Reboot D02 and press anykey to enter UEFI Boot Menu
    
    6. Select "FLASH Start OS" boot option.

    To get all binaries mentioned above, please refer to Readme.txt.
    
# Boot via PXE
    
    1. Setup PXE environment on host

    Enable both DHCP and TFTP services on one of your host machines according to Setup_PXE_Env_on_Host.txt.

    2. Reboot and press anykey to enter UEFI Boot Menu
    
    3. Select boot option "PXE on MAC Address: " with your board's MAC address as the end.
    
    4. After several seconds, D02 will boot by PXE automatically.
    
    To config the grub.cfg to support PXE boot, please refer to Grub_Manual.txt.

# Boot via NFS
    
    D02 supports booting via NFS, you can try it as following steps:

    1. Enable DHCP, TFTP and NFS service according to Setup_PXE_Env_on_Host.txt.

    2. Get and config grub file to support NFS boot according to Grub_Manual.txt.

    3. Reboot D02 and press anyke to enter UEFI Boot Menu

    4. Select boot option "PXE on MAC Address: " with your board's MAC address as the end.

# Boot via SATA
    
    This part will tell you how to boot D02 via SATA disk with kernel image, dtb file, grub in it.
    In my case, my SATA disk will be partitioned into 3 parts: sda1(EFI part),sda2(Ubuntu rootfs),sda3(Fedora release).
    
    1. Boot by NORFLASH, PXE or NFS firstly according above descriptions.

    2. Part and format SATA disk

    Format SATA disk, e.g.: sudo mkfs.vfat /dev/sda1; sudo mkfs.ext4 /dev/sda2
    Partition SATA disk with "sudo fdisk /dev/sda" as follow:
    
    +---------+-----------+--------------+------------------+
    | Name    |   Size    |    Type      |   Tag            |
    +---------+-----------+--------------+------------------+
    | sda1    |   200M    |  EFI system  |   EFI            |
    +---------+-----------+--------------+------------------+
    | sda2    |   10G     |    ext4      | linux filesystem |
    +---------+-----------+--------------+------------------+
    | sda3    |   10G     |    ext4      | linux filesystem |
    +---------+-----------+--------------+------------------+
    
    Note: EFI partition must be a fat filesystem, so you should format sda1 with “sudo mkfs.vfat /dev/sda1″.

    *** Preprocess when the disk can’t be identified ***
    
        When the disk is not identified by D02, you can try the following step to process the disk. (for some specfic disk eg seagate disk made by samsung, it can be useful)
        
        a. Find a PC or another board which can identify this disk
        You should find a PC or another board which can identify this disk, and the system of PC or board should be linux system. For us,we can use D01 board.
        
        b. Use tool fdisk to process this disk
        
        format the disk firstly: 
                            sudo mkfs.ext4 /dev/sda
        add a gpt to this disk : 
                            fdisk /dev/sda
                            g-------add a gpt partition
        add some EFI partition : 
                            n-------add a partition
                            1-------the number of partition
                            +200M---------size of partition
                            t-------change the type of partition
                            EFI system
        add some anther partition  ...
        save the change           : w
        formate EFI partition  : sudo mkfs.vfat /dev/sda1
        
        Then this disk can be identified by D02 board.
    
    3. Download files and store them into SATA as below.
        sda1: -------EFI
              |       |
              |       GRUB2------grubaa64.efi  //grub binary file
              |
              |-------------grub.cfg           //grub config file
              |
              |-------------Image_D02          //kernel binary Image
              |
              |-------------hip05-d02.dtb      //device tree binary
        sda2: Ubuntu distribution
        sda3: Fedora distribution

    To get kernel image and dtb file, please refer to Readme.txt.
    To get and config grub and grub.cfg, please refer to Grub_Manual.txt.
    To get different distributions, please refer to Distributions_Guider.txt.
    
    4. Reboot and press anykey to enter UEFI Boot Menu.

    5. Select boot from hardware disk

    6. Press arrow key up or down to select grub boot option to decide which distribution should boot.

# Boot via USB

This part will tell you how to boot D02 via GRUB on USB disk. In my case, USB disk may be partitioned into two parts:sda1(EFI part),sda2(ubuntu release).
1.Partition and format USB disk
Format USB disk: mkfs -t ext4 /dev/sda
Partition USB disk as follow:
+---------+-----------+--------------+------------------+
| Name    |   Size    |    Type      |   Tag            |
+---------+-----------+--------------+------------------+
| sda1    |   200M    |  EFI system  |   EFI            |
+---------+-----------+--------------+------------------+
| sda2    |   10G     |    ext4      | linux filesystem |
+---------+-----------+--------------+------------------+
Note: EFI system should have a fat filesystem, so we must format sda1 with “mkfs.vfat /dev/sda1″. 
operate typically as follows:
a. Use "fdisk" to partition this disk in a Ubuntu machine
format the disk firstly: 
                    mkfs.ext4 /dev/sda
add a gpt to this disk : 
                    fdisk /dev/sda
                    g-------add a gpt partition
add some EFI partition : 
                    n-------add a partition
                    1-------the number of partition
                    +200M---------size of partition
                    t-------change the type of partition
                    EFI system
add ubuntu distribution partition  ...
		    n-------add a partition
                    2-------the number of partition
                    +10G---------size of partition
save the change           : w
formate EFI partition  : mkfs.vfat /dev/sda1
formate ubuntu distribution partition: mkfs -t ext4 /dev/sda2

2.Related files are placed as follow:

    sda1: -------EFI
          |       |
          |       GRUB2------grubaa64.efi  //grub binary file
          |
          |-------------grub.cfg           //grub config file
          |
          |-------------Image              //kernel binary Image
          |
          |-------------hip05-d02.dtb      //device tree binary
    sda2: ubuntu distribution
Note: The names of grub files archaa64.efi is the same name with filename item in DHCP configure file /etc/dhcp/dhcpd.conf.

3.modify grub config file
And the context of grub.cfg file is as follow:

#
# Sample GRUB configuration file
#
# Boot automatically after 0 secs.
set timeout=5
# By default, boot the Euler/Linux
set default=ubuntu
# For booting GNU/Linux

menuentry "ubuntu" --id ubuntu {
    set root=(hd0,gpt1)
    linux /Image rdinit=/init root=/dev/sda2 rootfstype=ext4 rw console=ttyS0,115200 earlycon=uart8250,mmio32,0x80300000 ip=dhcp
    devicetree /hip05-d02.dtb
}

Note: If you want to use another linux distribution, please refer above steps.

4.Reboot and enter UEFI menu
5.Select boot from USB disk
6.select the USB selection of grub boot menu

# Boot via SAS

Note: For now, D02 board don't still support boot from SAS disk. Therefore, the temporary solution is adopted as follows.

1.Partition SAS disk in nfs evironment
SAS disk may be partitioned into fews parts:
+---------+-----------+--------------+------------------+
| Name    |   Size    |    Type      |   Tag            |
+---------+-----------+--------------+------------------+
| sda1    |   200M    |  EFI system  |   EFI            |
+---------+-----------+--------------+------------------+
| sda2    |   10G     |    ext4      | linux filesystem |
+---------+-----------+--------------+------------------+
| sda3    |   10G     |    ext4      | linux filesystem |
+---------+-----------+--------------+------------------+
| sda4    |   10G     |    ext4      | linux filesystem |
+---------+-----------+--------------+------------------+
| sda5    |rest space |    ext4      | linux swap       |
+---------+-----------+--------------+------------------+ 
Linux distribution are placed as follow:
    sda1: null
    sda2: ubuntu distribution
    sda3: OpenSUSE distribution
    sda4: miniDistribution
    sda5: reserved for user

2.Build the kernel
modify hip05-d02.dts file at arch/arm64/boot/dts/hisilicon/ directory as follow:
bootargs = "rdinit=/init root=PARTUUID=XXX rootdelay=10 rootfstype=ext4 rw console=ttyS0,115200 earlycon=uart8250,mmio32,0x80300000 ip=::::::dhcp"
Note: XXX means the PARTUUID of that partition which your linux distribution is located in. 
After build the linux kernel from source, burn Image and dtb file into Nor Flash. About how to burn Image and dtb file into Nor Flash, please refer to Deploy_Manual.txt file.

3.start up system
Firstly,please plug this SAS disk into D02 board.
(1)boot and enter UEFI menu
(2)Select boot from FLASH Start OS

# Boot via ACPI
    
    D02 also supports booting via ACPI, and the steps are as follows:

    1. Power on and enter UEFI SHELL

    2. IP address config
    
    ifconfig -s eth0 <IP address> <mask> <gateway>
    e.g.: ifconfig -s eth0 192.168.1.4 255.255.255.0 192.168.1.1
    
    3. Burn the kernel from FTP
    
    provision <server address> -u <ftp user name> -p <ftp password> -f <kernel image> -a <download target address>
    mdfile \<kernel image> <source address> <imagesize>
    e.g.: provision 192.168.1.107 -u d02 -p 123456 -f Image_D02 -a 0x80000
          mdfile \Image_D02 0x80000 0x82A000
    
    Note: imagesize must be the real Image size which can be gotten from previous command.
    
    4. Burn the filesystem from FTP
    
    provision <server address> -u <ftp user name> -p <ftp password> -f <rootfs image> -a <download target address>
    mdfile \<rootfs image> <source address> <imagesize>
    e.g.: provision 192.168.1.107 -u d02 -p 123456 -f mini-rootfs.cpio.gz -a 0x7000000
          mdfile \mini-rootfs.cpio.gz 0x7000000 0x1845F12
    
    Note: imagesize must be the real Image size which can be gotten from previous command
    
    5. Get into target directory to check whether the files downloaded above are there.
    
        cd fs0:
        dir
    
    6. Set the parameters of booting via ACPI
    
        start Image_D02 "acpi=fore console=ttyS0,115200 earlycon=uart8250,mmio32,0x80300000 initrd=mini-rootfs.cpio.gz"
